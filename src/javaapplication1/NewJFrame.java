/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication1;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing; 

/**
 *
 * @author locng
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton1.setText("Tạo key");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Mã hóa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Key");

        jButton3.setText(" Giải mã");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea3.setColumns(20);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        String text = jTextField1.getText().replaceAll("\\s+", "").replaceAll("\\d+", "").replaceAll("\\W+", "").replaceAll("[j|J]", "i").toUpperCase();
        String temp[] = new String[text.length()];
        char keyArray[][];
        int i = 0;
        for (char x : text.toCharArray()) {
            temp[i++] = Character.toString(x);
        }
        LinkedHashSet<String> keySet = new LinkedHashSet<String>();
        keySet.addAll(Arrays.asList(temp));
        for (i = 65; i <= 90; i++) {
            if (i != 74) {
                keySet.add(Character.toString(i));
            }
        }
        String a = "";
        for (String x : keySet) {
            a += x;
        }
        jTextArea3.setText(a);

    }//GEN-LAST:event_jButton1ActionPerformed

    private Position positionOfChar(char arr[][], char x) {
        Position p = new Position();
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                if (arr[i][j] == x) {
                    p.x = i;
                    p.y = j;
                    return p;
                }

            }
        }
        return p;
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTextArea1.getText().isEmpty() || jTextArea1.getText().isBlank()) {

            JOptionPane.showMessageDialog(null, "Bạn phải nhập vào văn bản cần mã hóa");
            return;
        }
        char[][] key = new char[5][5];
        char tmp[] = jTextArea3.getText().toCharArray();
        int count = 0;
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                if (count == tmp.length) {
                    break;
                }

                key[i][j] = tmp[count++];
            }
        }
        char[] input = jTextArea1.getText().replaceAll("\\s+", "").replaceAll("\\d+", "").replaceAll("\\W+", "").replaceAll("[j|J]", "i").toUpperCase().toCharArray();
        char[] plaintext = new char[input.length * 3];
        String tmp1 = "";
        for (int i = 0; i < input.length;) {
            if (i == input.length - 1) {
                plaintext[tmp1.length()] = input[i];
                plaintext[tmp1.length() + 1] = 'O';
                tmp1 = String.valueOf(plaintext);
                tmp1 = tmp1.replaceAll("\\s+", "").replaceAll("\\d+", "").replaceAll("\\W+", "").replaceAll("[j|J]", "i").toUpperCase();
                i++;
            } else if (input[i] != input[i + 1]) {
                plaintext[tmp1.length()] = input[i];
                plaintext[tmp1.length() + 1] = input[i + 1];
                tmp1 = String.valueOf(plaintext);
                tmp1 = tmp1.replaceAll("\\s+", "").replaceAll("\\d+", "").replaceAll("\\W+", "").replaceAll("[j|J]", "i").toUpperCase();
                i += 2;
            } else {
                plaintext[tmp1.length()] = input[i];
                plaintext[tmp1.length() + 1] = 'O';
                tmp1 = String.valueOf(plaintext);
                tmp1 = tmp1.replaceAll("\\s+", "").replaceAll("\\d+", "").replaceAll("\\W+", "").replaceAll("[j|J]", "i").toUpperCase();
                i++;
            }

        }
         JOptionPane.showMessageDialog(null, tmp1);
        String cyphertext = "";
        for (int i = 0; i < plaintext.length - 1;i += 2) {
            if (plaintext[i] != plaintext[i + 1]) {
                Position p1 = positionOfChar(key, plaintext[i]);
                Position p2 = positionOfChar(key, plaintext[i + 1]);
                if (p1.x == p2.x) {
                    cyphertext += key[p1.x][(p1.y + 1) % 5];
                    cyphertext += key[p2.x][(p2.y + 1) % 5];
                } else if (p1.y == p2.y) {
                    cyphertext += key[(p1.x + 1) % 5][p1.y];
                    cyphertext += key[(p2.x + 1) % 5][p2.y];
                } else {
                    cyphertext += key[p1.x][p2.y];
                    cyphertext += key[p2.x][p1.y];
                }
                
            }
        }
        jTextArea2.setText(cyphertext);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
          if (jTextArea1.getText().isEmpty() || jTextArea1.getText().isBlank()) {

            JOptionPane.showMessageDialog(null, "Bạn phải nhập vào văn bản cần mã hóa");
            return;
        }
        char[][] key = new char[5][5];
        char tmp[] = jTextArea3.getText().toCharArray();
        int count = 0;
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                if (count == tmp.length) {
                    break;
                }

                key[i][j] = tmp[count++];
            }
        }
        char[] input = jTextArea1.getText().replaceAll("\\s+", "").replaceAll("\\d+", "").replaceAll("\\W+", "").replaceAll("[j|J]", "i").toUpperCase().toCharArray();
        char[] plaintext = new char[input.length * 3];
        String tmp1 = "";
        for (int i = 0; i < input.length;) {
            if (i == input.length - 1) {
                plaintext[tmp1.length()] = input[i];
                plaintext[tmp1.length() + 1] = 'O';
                tmp1 = String.valueOf(plaintext);
                tmp1 = tmp1.replaceAll("\\s+", "").replaceAll("\\d+", "").replaceAll("\\W+", "").replaceAll("[j|J]", "i").toUpperCase();
                i++;
            } else if (input[i] != input[i + 1]) {
                plaintext[tmp1.length()] = input[i];
                plaintext[tmp1.length() + 1] = input[i + 1];
                tmp1 = String.valueOf(plaintext);
                tmp1 = tmp1.replaceAll("\\s+", "").replaceAll("\\d+", "").replaceAll("\\W+", "").replaceAll("[j|J]", "i").toUpperCase();
                i += 2;
            } else {
                plaintext[tmp1.length()] = input[i];
                plaintext[tmp1.length() + 1] = 'O';
                tmp1 = String.valueOf(plaintext);
                tmp1 = tmp1.replaceAll("\\s+", "").replaceAll("\\d+", "").replaceAll("\\W+", "").replaceAll("[j|J]", "i").toUpperCase();
                i++;
            }

        }
         JOptionPane.showMessageDialog(null, tmp1);
        String cyphertext = "";
        for (int i = 0; i < plaintext.length - 1;i += 2) {
            if (plaintext[i] != plaintext[i + 1]) {
                Position p1 = positionOfChar(key, plaintext[i]);
                Position p2 = positionOfChar(key, plaintext[i + 1]);
                if (p1.x == p2.x) {
                    cyphertext += key[p1.x][(p1.y -1) % 5];
                    cyphertext += key[p2.x][(p2.y - 1) % 5];
                } else if (p1.y == p2.y) {
                    cyphertext += key[(p1.x - 1) % 5][p1.y];
                    cyphertext += key[(p2.x - 1) % 5][p2.y];
                } else {
                    cyphertext += key[p1.x][p2.y];
                    cyphertext += key[p2.x][p1.y];
                }
                
            }
        }
        jTextArea2.setText(cyphertext);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
